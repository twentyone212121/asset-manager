//! Traits for working with compiled assets.

/// Represents an asset that can be accessed at compile time.
///
/// This trait is implemented by all asset enums generated by the `assets!` macro.
pub trait Asset {
    /// Get the path of the asset relative to its root directory.
    fn path(&self) -> &'static str;

    /// Get the raw bytes of the asset.
    fn bytes(&self) -> &'static [u8];
}

/// Additional trait for asset collections that can enumerate all available assets.
pub trait AssetCollection: Asset
where
    Self: 'static,
{
    /// Get a slice containing all available assets of this type.
    fn all() -> &'static [Self]
    where
        Self: Sized;

    /// Find an asset by its path.
    fn find_by_path(path: &str) -> Option<Self>
    where
        Self: Sized + Copy,
    {
        Self::all()
            .iter()
            .find(|asset| asset.path() == path)
            .copied()
    }
}
